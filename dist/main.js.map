{"version":3,"file":"main.js","sources":["webpack://rspack-react-starter/./src/App.tsx","webpack://rspack-react-starter/./src/components/Board/index.tsx","webpack://rspack-react-starter/./src/components/EdgeComponent/index.tsx","webpack://rspack-react-starter/./src/components/EdgesBoard/index.tsx","webpack://rspack-react-starter/./src/components/NodeComponent/index.tsx","webpack://rspack-react-starter/./src/components/NodesBoard/index.tsx","webpack://rspack-react-starter/./src/main.tsx","webpack://rspack-react-starter/./src/pages/Flow/index.tsx","webpack://rspack-react-starter/./src/util/builder.tsx"],"sourcesContent":["\nimport './pages/Flow'\n\nfunction Layout(): HTMLElement{\n    var newDrawer = document.createElement('div');\n\n    newDrawer.innerHTML = `\n        <div>\n            <flow-root></flow-root>    \n        </div>\n    `\n    return newDrawer;\n}\n\n\nclass AppRoot extends HTMLElement {   \n  constructor() {\n      super();\n      this.render();\n    }\n  \n\n    render() {\n      this.innerHTML = `${Layout().innerHTML}` \n    }\n    \n}\n\n\ncustomElements.define('app-root', AppRoot);","import { produce } from \"../../util/builder\";\nimport EdgesBoard from \"../EdgesBoard\";\nimport NodesBoard from \"../NodesBoard\";\n\ninterface Position {\n    x: number;\n    y: number;\n}\n\ninterface Vector {\n    x0: number;\n    y0: number;\n    x1: number;\n    y1: number;\n}\n\ninterface NodeData {\n    id: string;\n    data: { label?: string; content: any };\n    inputs: number;\n    outputs: number;\n    edgesIn: string[];\n    edgesOut: string[];\n}\n\ninterface EdgesNodes {\n    [id: string]: { outNodeId: string; outputIndex: number; inNodeId: string; inputIndex: number };\n}\n\ninterface EdgesPositions {\n    [id: string]: Vector;\n}\n\ninterface EdgesActive {\n    [id: string]: boolean;\n}\n\nexport interface NodeProps {\n    id: string;\n    position: { x: number; y: number };\n    data: { label?: string; content: any };\n    inputs: number;\n    outputs: number;\n    actions?: { delete: boolean };\n}\n\nexport interface EdgeProps {\n    id: string;\n    sourceNode: string;\n    targetNode: string;\n    sourceOutput: number;\n    targetInput: number;\n}\n\nexport interface BoardProps {\n    nodes: NodeProps[];\n    edges: EdgeProps[];\n    onNodesChange: (newNodes: NodeProps[]) => void;\n    onEdgesChange: (newEdges: EdgeProps[]) => void;\n}\n\nfunction getEdgeId(nodeOutId: string, outputIndex: number, nodeInId: string, inputIndex: number) {\n    return `edge_${nodeOutId}:${outputIndex}_${nodeInId}:${inputIndex}`;\n}\n\nfunction getInitialEdges(nodes: NodeProps[]): {\n    initEdgesNodes: EdgesNodes[];\n    initEdgesPositions: EdgesPositions[];\n    initEdgesActives: EdgesActive[];\n} {\n    const initEdgesNodes: EdgesNodes[] = [];\n    const initEdgesPositions: EdgesPositions[] = [{}];\n    const initEdgesActives: EdgesActive[] = [{}];\n\n    for (let i = 0; i < nodes.length; i++) {\n        for (let j = 0; j < nodes.length; j++) {\n            if (i !== j) {\n                const nodeI = nodes[i];\n                const nodeJ = nodes[j];\n\n                for (let x = 0; x < nodeI.outputs; x++) {\n                    for (let y = 0; y < nodeJ.inputs; y++) {\n                        const edgeId = getEdgeId(nodeI.id, x, nodeJ.id, y);\n                        initEdgesPositions[edgeId] = { x0: 0, y0: 0, x1: 0, y1: 0 };\n                        initEdgesActives[edgeId] = false;\n                        initEdgesNodes[edgeId] = { outNodeId: nodeI.id, outputIndex: x, inNodeId: nodeJ.id, inputIndex: y };\n                    }\n                }\n            }\n        }\n    }\n\n    return { initEdgesNodes, initEdgesPositions, initEdgesActives };\n}\n\nfunction getInitialNodes(\n    nodes: NodeProps[],\n    edges: EdgeProps[]\n): {\n    initNodesPositions: Position[];\n    initNodesData: NodeData[];\n    initNodesOffsets: { inputs: { offset: Position }[]; outputs: { offset: Position }[] }[];\n} {\n    const initNodesPositions = nodes.map((node: NodeProps) => node.position);\n    const initNodesData = nodes.map((node: NodeProps) => {\n        \n        return {\n            edgesIn: edges\n                .map((edge: EdgeProps) => {\n                    if (edge.targetNode === node.id)\n                        return getEdgeId(edge.sourceNode, edge.sourceOutput, edge.targetNode, edge.targetInput);\n                    return \"null\";\n                })\n                .filter((elem: string) => elem !== \"null\"),\n            edgesOut: edges\n                .map((edge: EdgeProps) => {\n                    if (edge.sourceNode === node.id)\n                        return getEdgeId(edge.sourceNode, edge.sourceOutput, edge.targetNode, edge.targetInput);\n                    return \"null\";\n                })\n                .filter((elem: string) => elem !== \"null\"),\n            ...node,\n        };\n    });\n    const initNodesOffsets = nodes.map((node: NodeProps) => {\n        return {\n            inputs: [...Array(node.inputs)].map(() => {\n                return { offset: { x: 0, y: 0 } };\n            }),\n            outputs: [...Array(node.outputs)].map(() => {\n                return { offset: { x: 0, y: 0 } };\n            }),\n        };\n    });\n\n    return { initNodesPositions, initNodesData, initNodesOffsets };\n}\n\n\nclass FlowChart extends HTMLElement {\n    props: BoardProps\n    \n    // EDGES\n    edgesNodes: EdgesNodes[];\n    setEdgesNodes(edges: EdgesNodes[]){\n        this.edgesNodes = edges;\n    }\n    edgesPositions: EdgesPositions[];\n    setEdgesPositions(edgesPositions: EdgesPositions[]) {\n        this.edgesPositions = edgesPositions;        \n    }\n    edgesActives:EdgesActive[];\n    setEdgesActives(edgesActives: EdgesActive[]) {\n        this.edgesActives = edgesActives;\n    }\n\n    // NODES\n    nodesPositions:Position[];\n    setNodesPositions(nodesPositions:Position[]) {\n        this.nodesPositions = nodesPositions;\n    }\n    nodesData:NodeData[];\n    setNodesData(nodesData:NodeData[]) {\n        this.nodesData = nodesData;\n    }\n\n    nodesOffsets:{ inputs: { offset: Position }[]; outputs: { offset: Position }[] }[];\n    setNodesOffsets(nodesOffsets: { inputs: { offset: Position }[]; outputs: { offset: Position }[] }[]){\n        this.nodesOffsets = nodesOffsets;\n    }\n    clickedDelta:Position;\n    setClickedDelta(clickedDelta: Position){\n        this.clickedDelta = clickedDelta;\n    }\n    newEdge: { position: Vector; sourceNode: number; sourceOutput: number } | null;\n    setNewEdge(newEdge: { position: Vector; sourceNode: number; sourceOutput: number}){\n        this.newEdge = newEdge;\n        this.render();\n    }\n    constructor(props: BoardProps) {\n        super();\n        this.props = props;        \n        const { initEdgesNodes, initEdgesPositions, initEdgesActives } = getInitialEdges(this.props.nodes);        \n        this.setEdgesNodes(initEdgesNodes);\n        this.setEdgesPositions(initEdgesPositions);\n        this.setEdgesActives(initEdgesActives);\n        \n        const { initNodesPositions, initNodesData, initNodesOffsets } = getInitialNodes(this.props.nodes, this.props.edges);\n        this.setNodesPositions(initNodesPositions)\n        this.setNodesData(initNodesData)\n        this.setNodesOffsets(initNodesOffsets)\n\n        this.setClickedDelta({ x: 0, y: 0 })\n        this.setNewEdge(null);\n    }\n    connectedCallback() {\n        \n    }\n\n    render(){\n        const nextNodesLength = this.props.nodes.length;\n        const prevNodesLength = this.nodesData.length;        \n        if (nextNodesLength !== prevNodesLength) {\n            const { initEdgesNodes, initEdgesPositions, initEdgesActives } = getInitialEdges(this.props.nodes);\n            this.setEdgesNodes(initEdgesNodes);\n            this.setEdgesPositions(initEdgesPositions);\n            this.setEdgesActives(initEdgesActives);\n            const { initNodesPositions, initNodesData, initNodesOffsets } = getInitialNodes(this.props.nodes, this.props.edges);\n            this.setNodesPositions(initNodesPositions);\n            this.setNodesData(initNodesData);\n            this.setNodesOffsets(initNodesOffsets);\n        }\n\n        const nodesBoard = new NodesBoard({\n            nodesPositions:this.nodesPositions,\n            nodes:this.nodesData,\n            onNodeMount:this.handleOnNodeMount,\n            onNodePress:this.handleOnNodePress,\n            onNodeMove:this.handleOnNodeMove,\n            onNodeDelete:this.handleOnNodeDelete,\n            onOutputMouseDown:this.handleOnOutputMouseDown,\n            onInputMouseUp:this.handleOnInputMouseUp,\n            onMouseUp:this.handleOnMouseUp,\n            onMouseMove:this.handleOnMouseMove            \n        });\n        const edgesBoard = new EdgesBoard({\n            newEdge:this.newEdge,\n            edgesActives:this.edgesActives,\n            edgesPositions:this.edgesPositions,\n            onDeleteEdge: this.handleOnDeleteEdge\n        });\n        this.innerHTML = `\n        <div class=\"main\">\n            <div class=\"wrapper\">\n                <div class=\"content\" style=${{ cursor: this.newEdge !== null ? \"crosshair\" : \"inherit\" }}>\n                    ${nodesBoard.outerHTML}\n                    ${edgesBoard.outerHTML}\n                </div>\n            </div>\n        </div>\n        `\n    }    \n    \n\n    // NODE HANDLERS\n    handleOnNodeMount(values: {\n        nodeIndex: number;\n        inputs: { offset: { x: number; y: number } }[];\n        outputs: { offset: { x: number; y: number } }[];\n    }) {\n        const nodesOffset = produce(\n            (\n                nodesOffsets: {\n                    inputs: { offset: { x: number; y: number } }[];\n                    outputs: { offset: { x: number; y: number } }[];\n                }[]\n            ) => {\n                this.nodesOffsets[values.nodeIndex].inputs = values.inputs;\n                this.nodesOffsets[values.nodeIndex].outputs = values.outputs;\n            }\n        )\n        this.setNodesOffsets(nodesOffset(this.nodesOffsets));\n        \n        const edgesActives = (prev: EdgesActive[]) => {\n            const next = { ...prev };\n            this.nodesData[values.nodeIndex].edgesIn.map((edgeId: string) => {\n                next[edgeId] = true;\n            });\n            this.nodesData[values.nodeIndex].edgesOut.map((edgeId: string) => {\n                next[edgeId] = true;\n            });\n            return next;\n        }\n        this.setEdgesActives(edgesActives(this.edgesActives));\n\n        const edgesPositions = (prev: EdgesPositions[]) => {\n            const next = { ...prev };\n            this.nodesData[values.nodeIndex].edgesIn.map((edgeId: string) => {\n                next[edgeId] = {\n                    x0: prev[edgeId]?.x0 || 0,\n                    y0: prev[edgeId]?.y0 || 0,\n                    x1: this.nodesPositions[values.nodeIndex].x + values.inputs[this.edgesNodes[edgeId].inputIndex].offset.x,\n                    y1: this.nodesPositions[values.nodeIndex].y + values.inputs[this.edgesNodes[edgeId].inputIndex].offset.y,\n                };\n            });\n            this.nodesData[values.nodeIndex].edgesOut.map((edgeId: string) => {\n                next[edgeId] = {\n                    x0: this.nodesPositions[values.nodeIndex].x + values.outputs[this.edgesNodes[edgeId].outputIndex].offset.x,\n                    y0: this.nodesPositions[values.nodeIndex].y + values.outputs[this.edgesNodes[edgeId].outputIndex].offset.y,\n                    x1: prev[edgeId]?.x1 || 0,\n                    y1: prev[edgeId]?.y1 || 0,\n                };\n            });\n            return next;\n        }\n        this.setEdgesPositions(edgesPositions(this.edgesPositions));\n    }\n\n    handleOnNodePress(deltaX: number, deltaY: number) {\n        this.setClickedDelta({ x: deltaX, y: deltaY });\n    }\n\n    handleOnNodeMove(nodeIndex: number, x: number, y: number) {\n        const prev = ():Position[] => {\n            const next = [...this.nodesPositions];\n            next[nodeIndex].x = x - this.clickedDelta.x;\n            next[nodeIndex].y = y - this.clickedDelta.y;\n            return next;\n        }\n        this.setNodesPositions(prev());\n\n        const edgesPositions = (prev: EdgesPositions[]) => {\n            const next = { ...prev };\n            this.nodesData[nodeIndex].edgesIn.map((edgeId: string) => {\n                if (this.edgesActives[edgeId])\n                    next[edgeId] = {\n                        x0: prev[edgeId]?.x0 || 0,\n                        y0: prev[edgeId]?.y0 || 0,\n                        x1: x + this.nodesOffsets[nodeIndex].inputs[this.edgesNodes[edgeId].inputIndex].offset.x - this.clickedDelta.x,\n                        y1: y + this.nodesOffsets[nodeIndex].inputs[this.edgesNodes[edgeId].inputIndex].offset.y - this.clickedDelta.y,\n                    };\n            });\n            this.nodesData[nodeIndex].edgesOut.map((edgeId: string) => {\n                if (this.edgesActives[edgeId])\n                    next[edgeId] = {\n                        x0: x + this.nodesOffsets[nodeIndex].outputs[this.edgesNodes[edgeId].outputIndex].offset.x - this.clickedDelta.x,\n                        y0: y + this.nodesOffsets[nodeIndex].outputs[this.edgesNodes[edgeId].outputIndex].offset.y - this.clickedDelta.y,\n                        x1: prev[edgeId]?.x1 || 0,\n                        y1: prev[edgeId]?.y1 || 0,\n                    };\n            });\n            return next;\n        }\n        this.setEdgesPositions(edgesPositions(this.edgesPositions));\n    }\n\n    handleOnNodeDelete(nodeId: string) {\n        const newNodes = this.props.nodes.filter((node: NodeProps) => node.id !== nodeId);\n        const newEdges = this.props.edges.filter((edge: EdgeProps) => edge.sourceNode !== nodeId && edge.targetNode !== nodeId);\n        this.props.onEdgesChange(newEdges);\n        this.props.onNodesChange(newNodes);\n    }\n\n    handleOnOutputMouseDown(nodeIndex: number, outputIndex: number) {\n        const nodePosition = this.nodesPositions[nodeIndex];\n        const outputOffset = this.nodesOffsets[nodeIndex].outputs[outputIndex].offset;\n        this.setNewEdge({\n            position: {\n                x0: nodePosition.x + outputOffset.x,\n                y0: nodePosition.y + outputOffset.y,\n                x1: nodePosition.x + outputOffset.x,\n                y1: nodePosition.y + outputOffset.y,\n            },\n            sourceNode: nodeIndex,\n            sourceOutput: outputIndex,\n        });\n    }\n\n    handleOnInputMouseUp(nodeIndex: number, inputIndex: number) {\n        if (this.newEdge?.sourceNode === nodeIndex) {\n            this.setNewEdge(null);\n            return;\n        }\n\n        const outputEdges: string[] = JSON.parse(JSON.stringify(this.nodesData[this.newEdge?.sourceNode || 0].edgesOut));\n        const inputEdges: string[] = JSON.parse(JSON.stringify(this.nodesData[nodeIndex].edgesIn));\n\n        if (!this.newEdge) return;\n        const sourceNodeId = this.nodesData[this.newEdge?.sourceNode || 0].id;\n        const targetNodeId = this.nodesData[nodeIndex].id;\n\n        const edgeId = getEdgeId(sourceNodeId, this.newEdge?.sourceOutput || 0, targetNodeId, inputIndex);\n\n        let haveEdge = false;\n        if (outputEdges.includes(edgeId)) haveEdge = true;\n        if (inputEdges.includes(edgeId)) haveEdge = true;\n\n        if (!haveEdge) {\n            const edgesPositions = (prev: EdgesPositions[]) => {\n                const next = { ...prev };\n                next[edgeId] = {\n                    x0:\n                    this.nodesPositions[this.newEdge?.sourceNode || 0].x +\n                    this.nodesOffsets[this.newEdge?.sourceNode || 0].outputs[this.newEdge?.sourceOutput || 0].offset.x,\n                    y0:\n                    this.nodesPositions[this.newEdge?.sourceNode || 0].y +\n                    this.nodesOffsets[this.newEdge?.sourceNode || 0].outputs[this.newEdge?.sourceOutput || 0].offset.y,\n                    x1: this.nodesPositions[nodeIndex].x + this.nodesOffsets[nodeIndex].inputs[inputIndex].offset.x,\n                    y1: this.nodesPositions[nodeIndex].y + this.nodesOffsets[nodeIndex].inputs[inputIndex].offset.y,\n                };\n                return next;\n            }\n            this.setEdgesPositions(edgesPositions(this.edgesPositions));\n            \n            const edgesActives = (prev: EdgesActive[]) => {\n                const next = { ...prev };\n                next[edgeId] = true;\n                return next;\n            }\n            this.setEdgesActives(edgesActives(this.edgesActives));\n            const nodesProduced = produce((nodesData: NodeData[]) => {\n                this.nodesData[this.newEdge?.sourceNode || 0].edgesOut.push(edgeId);\n                nodesData[nodeIndex].edgesIn.push(edgeId);\n            })\n            this.setNodesData(nodesProduced(this.nodesData));\n\n            const activeEdgesKeys = Object.keys(this.edgesActives);\n            const activeEdges: EdgeProps[] = [];\n            for (let i = 0; i < activeEdgesKeys.length; i++) {\n                if (this.edgesActives[activeEdgesKeys[i]]) {\n                    const edgeInfo = this.edgesNodes[activeEdgesKeys[i]];\n                    activeEdges.push({\n                        id: activeEdgesKeys[i],\n                        sourceNode: edgeInfo.outNodeId,\n                        sourceOutput: edgeInfo.outputIndex,\n                        targetNode: edgeInfo.inNodeId,\n                        targetInput: edgeInfo.inputIndex,\n                    });\n                }\n            }\n            this.props.onEdgesChange(activeEdges);\n        }\n        this.setNewEdge(null);\n    }\n\n    handleOnMouseUp() {\n        this.setNewEdge(null);\n    }\n\n    handleOnMouseMove(x: number, y: number) {\n        if (this.newEdge !== null)\n            this.setNewEdge({\n                position: { x0: this.newEdge?.position?.x0 || 0, y0: this.newEdge?.position?.y0 || 0, x1: x, y1: y },\n                sourceNode: this.newEdge?.sourceNode || 0,\n                sourceOutput: this.newEdge?.sourceOutput || 0,\n            });\n    }\n\n    // EDGE HANDLERS\n    handleOnDeleteEdge(edgeId: string) {\n        const nodesProduced = produce((nodesData: NodeData[]) => {\n            const nodeSourceId = this.edgesNodes[edgeId].outNodeId;\n            const nodeTargetId = this.edgesNodes[edgeId].inNodeId;\n\n            const nodeSourceIndex = nodesData.findIndex((node: NodeData) => node.id === nodeSourceId);\n            const nodeTargetIndex = nodesData.findIndex((node: NodeData) => node.id === nodeTargetId);\n\n            nodesData[nodeTargetIndex].edgesIn = nodesData[nodeTargetIndex].edgesIn.filter((elem: string) => elem !== edgeId);\n            nodesData[nodeSourceIndex].edgesOut = nodesData[nodeSourceIndex].edgesOut.filter((elem: string) => elem !== edgeId);\n        })\n        this.setNodesData(nodesProduced(this.nodesData));\n        \n        const edgesActives = (prev: EdgesActive[]) => {\n            const next = { ...prev };\n            next[edgeId] = false;\n            return next;\n        }\n\n        this.setEdgesActives(edgesActives(this.edgesActives));\n\n        const activeEdgesKeys = Object.keys(this.edgesActives);\n        const activeEdges: EdgeProps[] = [];\n        for (let i = 0; i < activeEdgesKeys.length; i++) {\n            if (this.edgesActives[activeEdgesKeys[i]]) {\n                const edgeInfo = this.edgesNodes[activeEdgesKeys[i]];\n                activeEdges.push({\n                    id: activeEdgesKeys[i],\n                    sourceNode: edgeInfo.outNodeId,\n                    sourceOutput: edgeInfo.outputIndex,\n                    targetNode: edgeInfo.inNodeId,\n                    targetInput: edgeInfo.inputIndex,\n                });\n            }\n        }\n        this.props.onEdgesChange(activeEdges);\n    }    \n}\n\ncustomElements.define(\"flow-chart\", FlowChart);\nexport default FlowChart;\n","import styles from \"./styles.module.css\";\nimport { ClickOutside } from \"../../util/builder\";\n\nexport interface EdgeComponentProps {\n    selected: boolean;\n    isNew: boolean;\n    position: { x0: number; y0: number; x1: number; y1: number };\n    onClickEdge: () => void;\n    onClickDelete: () => void;\n    onClickOutside: () => void;\n}\n\nexport interface Position{ x: number; y: number }\n\nexport default class EdgeComponent extends HTMLElement {\n    props:EdgeComponentProps\n    middlePoint:Position\n    \n    constructor(props: EdgeComponentProps) {\n        super();        \n        this.props = props;        \n        this.middlePoint = {\n            x: props.position.x0 + (props.position.x1 - props.position.x0) / 2,\n            y: props.position.y0 + (props.position.y1 - props.position.y0) / 2,\n        };\n        this.render();\n    }\n\n    setMiddlePoint(middlePoint:Position){\n        this.middlePoint = middlePoint;\n    }\n    render(){\n        if(this.props){\n            const middleX = this.props.position.x0 + (this.props.position.x1 - this.props.position.x0) / 2;\n            const middleY = this.props.position.y0 + (this.props.position.y1 - this.props.position.y0) / 2;\n            this.setMiddlePoint({\n                x: middleX,\n                y: middleY,\n            })\n            const path = document.createElement('path');\n            path.className = this.props.isNew ? \"edgeNew\" : this.props.selected ? \"edgeSelected\" : \"edge\";\n            path.setAttribute('d',`M ${this.props.position.x0} ${this.props.position.y0} C ${\n                this.props.position.x0 + this.calculateOffset(Math.abs(this.props.position.x1 - this.props.position.x0))\n            } ${this.props.position.y0}, ${this.props.position.x1 - this.calculateOffset(Math.abs(this.props.position.x1 - this.props.position.x0))} ${\n                this.props.position.y1\n            }, ${this.props.position.x1} ${this.props.position.y1}`);\n            path.onclick = this.props.onClickEdge;\n            ClickOutside(path, this.props.onClickOutside)\n\n            const s = `\n            <path\n                class=${this.props.isNew ? \"edgeNew\" : this.props.selected ? \"edgeSelected\" : \"edge\"}\n                d=${`M ${this.props.position.x0} ${this.props.position.y0} C ${\n                    this.props.position.x0 + this.calculateOffset(Math.abs(this.props.position.x1 - this.props.position.x0))\n                } ${this.props.position.y0}, ${this.props.position.x1 - this.calculateOffset(Math.abs(this.props.position.x1 - this.props.position.x0))} ${\n                    this.props.position.y1\n                }, ${this.props.position.x1} ${this.props.position.y1}`}\n                onClick=${() => this.props.onClickEdge()}\n                use:clickOutside=${() => this.props.onClickOutside()}\n            />\n                ${this.props.selected && (\n                <g\n                    class=\"delete\"\n                    cursor=\"pointer\"\n                    transform={`translate(${this.middlePoint.x}, ${this.middlePoint.y})`}\n                    onClick={this.props.onClickDelete}\n                >\n                    <circle class=\"circle\" />\n                    <svg\n                        fill=\"currentColor\"\n                        stroke-width=\"0\"\n                        xmlns=\"http://www.w3.org/2000/svg\"\n                        class=\"icon\"\n                        width=\"20\"\n                        height=\"20\"\n                        viewBox=\"0 0 20 20\"\n                        color=\"white\"\n                        x=\"-10\"\n                        y=\"-10\"\n                    >\n                        <path d=\"M10.185,1.417c-4.741,0-8.583,3.842-8.583,8.583c0,4.74,3.842,8.582,8.583,8.582S18.768,14.74,18.768,10C18.768,5.259,14.926,1.417,10.185,1.417 M10.185,17.68c-4.235,0-7.679-3.445-7.679-7.68c0-4.235,3.444-7.679,7.679-7.679S17.864,5.765,17.864,10C17.864,14.234,14.42,17.68,10.185,17.68 M10.824,10l2.842-2.844c0.178-0.176,0.178-0.46,0-0.637c-0.177-0.178-0.461-0.178-0.637,0l-2.844,2.841L7.341,6.52c-0.176-0.178-0.46-0.178-0.637,0c-0.178,0.176-0.178,0.461,0,0.637L9.546,10l-2.841,2.844c-0.178,0.176-0.178,0.461,0,0.637c0.178,0.178,0.459,0.178,0.637,0l2.844-2.841l2.844,2.841c0.178,0.178,0.459,0.178,0.637,0c0.178-0.176,0.178-0.461,0-0.637L10.824,10z\"></path>\n                    </svg>\n                </g>\n            )}`\n            this.innerHTML = s\n\n        }\n    }\n\n    calculateOffset(value: number): number {\n        return (value * 100) / 200;\n    }\n\n    \n        /*\n            \n            {this.props.selected && (\n                <g\n                    class={styles.delete}\n                    cursor=\"pointer\"\n                    transform={`translate(${middlePoint().x}, ${middlePoint().y})`}\n                    onClick={this.props.onClickDelete}\n                >\n                    <circle class={styles.circle} />\n                    <svg\n                        fill=\"currentColor\"\n                        stroke-width=\"0\"\n                        xmlns=\"http://www.w3.org/2000/svg\"\n                        class={styles.icon}\n                        width=\"20\"\n                        height=\"20\"\n                        viewBox=\"0 0 20 20\"\n                        color=\"white\"\n                        x=\"-10\"\n                        y=\"-10\"\n                    >\n                        <path d=\"M10.185,1.417c-4.741,0-8.583,3.842-8.583,8.583c0,4.74,3.842,8.582,8.583,8.582S18.768,14.74,18.768,10C18.768,5.259,14.926,1.417,10.185,1.417 M10.185,17.68c-4.235,0-7.679-3.445-7.679-7.68c0-4.235,3.444-7.679,7.679-7.679S17.864,5.765,17.864,10C17.864,14.234,14.42,17.68,10.185,17.68 M10.824,10l2.842-2.844c0.178-0.176,0.178-0.46,0-0.637c-0.177-0.178-0.461-0.178-0.637,0l-2.844,2.841L7.341,6.52c-0.176-0.178-0.46-0.178-0.637,0c-0.178,0.176-0.178,0.461,0,0.637L9.546,10l-2.841,2.844c-0.178,0.176-0.178,0.461,0,0.637c0.178,0.178,0.459,0.178,0.637,0l2.844-2.841l2.844,2.841c0.178,0.178,0.459,0.178,0.637,0c0.178-0.176,0.178-0.461,0-0.637L10.824,10z\"></path>\n                    </svg>\n                </g>\n            )}\n        \n    */\n}\n\n\ncustomElements.define(\"edge-component\", EdgeComponent)","import EdgeComponent from \"../EdgeComponent\";\nimport styles from \"./styles.module.css\";\n\ninterface Vector {\n    x0: number;\n    y0: number;\n    x1: number;\n    y1: number;\n}\n\ninterface EdgesPositions {\n    [id: string]: Vector;\n}\n\ninterface EdgesActive {\n    [id: string]: boolean;\n}\n\ninterface EdgeBoardProps {\n    newEdge: { position: Vector; sourceNode: number; sourceOutput: number } | null;\n    edgesActives: EdgesActive[];\n    edgesPositions: EdgesPositions[];\n    onDeleteEdge: (edgeId: string) => void;\n}\nexport class EdgesBoard extends HTMLElement {\n    ids: string[] = []\n    setIds(ids: string[]){\n        this.ids = ids;\n        this.render();        \n    }\n    selected: string = \"null\";\n    setSelected(id: string){\n        this.selected = id;\n        this.render();\n    }\n    props: EdgeBoardProps\n    constructor(props:EdgeBoardProps){\n        super();\n        this.props = props;\n        \n\n    }\n\n    connectedCallback() {\n        const newIds = Object.keys(this.props.edgesActives).filter((elem: string) => this.props.edgesActives[elem]);\n        this.setIds(newIds);\n        if (this.selected !== \"null\" && this.props.newEdge !== null) this.setSelected(\"null\");\n    }\n\n    render() {\n        this.innerHTML = `\n        <svg class=\"main\">\n            ${this.props.newEdge !== null && (\n                <EdgeComponent\n                    selected={false}\n                    isNew={true}\n                    position={{\n                        x0: this.props.newEdge.position.x0,\n                        y0: this.props.newEdge.position.y0,\n                        x1: this.props.newEdge.position.x1,\n                        y1: this.props.newEdge.position.y1,\n                    }}\n                    onClickDelete={() => {}}\n                    onClickEdge={() => {}}\n                    onClickOutside={() => {}}\n                />\n            )}\n            ${this.ids.forEach((edgeId: string) => {\n                \n                    if (this.props.edgesActives[edgeId])\n                        return (\n                            <EdgeComponent\n                                selected={edgeId === this.selected}\n                                isNew={false}\n                                position={{\n                                    x0: this.props.edgesPositions[edgeId]?.x0 || 0,\n                                    y0: this.props.edgesPositions[edgeId]?.y0 || 0,\n                                    x1: this.props.edgesPositions[edgeId]?.x1 || 0,\n                                    y1: this.props.edgesPositions[edgeId]?.y1 || 0,\n                                }}\n                                onClickDelete={() => {\n                                    this.props.onDeleteEdge(edgeId);\n                                }}\n                                onClickEdge={() => {\n                                    this.setSelected(edgeId);\n                                }}\n                                onClickOutside={() => {\n                                    if (this.selected === edgeId) this.setSelected(\"null\");\n                                }}\n                            />\n                        );\n                \n            })}\n            \n        </svg>\n        `\n    }\n}    \n\ncustomElements.define(\"edges-board\", EdgesBoard);\n\nexport default EdgesBoard;\n","import { ClickOutside } from \"../../util/builder\";\nimport styles from \"./styles.module.css\";\n\nexport interface NodeComponentProps {\n    ref?: any;\n    x: number;\n    y: number;\n    selected: boolean;\n    actions?: { delete?: boolean };\n    label?: string;\n    content: any;\n    inputs: number;\n    outputs: number;\n    onNodeMount?: (inputs: { offset: { x: number; y: number } }[], outputs: { offset: { x: number; y: number } }[]) => void;\n    onMouseDown?: (event: any) => void;\n    onMouseDownOutput?: (outputIndex: number) => void;\n    onMouseUpInput?: (inputIndex: number) => void;\n    onClickOutside?: () => void;\n    onClickDelete?: () => void;\n}\n\nclass NodeComponent extends HTMLElement {\n    props: NodeComponentProps;\n    private inputRefs: [...Array<HTMLElement>]\n    private outputRefs: [...Array<HTMLElement>]\n    constructor(props: NodeComponentProps){\n        super();\n        this.props = props;\n        this.inputRefs = [...Array(this.props.inputs)];\n        this.outputRefs = [...Array(this.props.outputs)];\n        let inputs: { offset: { x: number; y: number } }[] = [];\n        let outputs: { offset: { x: number; y: number } }[] = [];\n        for (let i = 0; i < this.inputRefs.length; i++) {\n            inputs.push({ offset: { x: this.inputRefs[0].getBoundingClientRect().x, y: this.inputRefs[0].getBoundingClientRect().y } });\n        }\n\n        for (let i = 0; i < this.outputRefs.length; i++) {\n            outputs.push({ offset: { x: this.outputRefs[i].getBoundingClientRect().x, y: this.outputRefs[i].getBoundingClientRect().y } });\n        }\n        props.onNodeMount(inputs, outputs);\n        this.render();\n    }\n    \n    render(){\n        const node = document.createElement('div');\n        node.classList.add(\"node\");\n        node.style.transform = `translate(${this.props.x}px, ${this.props.y}px)`;\n        node.onmousedown = this.props.onMouseDown;\n        const action = document.createElement('div');\n        action.className = this.props.selected ? \"actions\" : \"actionsHidden\";\n        action.innerHTML = `\n        ${this.props.actions && this.props.actions.delete && (\n            <svg\n                class=\"delete\"\n                onClick={() => {\n                    if (this.props.onClickDelete) this.props.onClickDelete();\n                }}\n                fill=\"currentColor\"\n                stroke-width=\"0\"\n                baseProfile=\"tiny\"\n                version=\"1.2\"\n                viewBox=\"4 4 16 16\"\n                style=\"overflow: visible;\"\n            >\n                <path d=\"M12 4c-4.419 0-8 3.582-8 8s3.581 8 8 8 8-3.582 8-8-3.581-8-8-8zm3.707 10.293a.999.999 0 11-1.414 1.414L12 13.414l-2.293 2.293a.997.997 0 01-1.414 0 .999.999 0 010-1.414L10.586 12 8.293 9.707a.999.999 0 111.414-1.414L12 10.586l2.293-2.293a.999.999 0 111.414 1.414L13.414 12l2.293 2.293z\"></path>\n            </svg>\n        )}\n        ${this.props.label && <span class=\"nodeLabel\">{this.props.label}</span>}\n        <div class=\"nodeContent\">${this.props.content}</div>\n\n        ${this.props.inputs > 0 && (\n            <div class=\"nodeInputs\">\n                {[...Array(this.props.inputs).keys()].forEach((element,index) => {\n                    <div\n                    ref={(ref: any) => {\n                        this.inputRefs[index] = ref;\n                    }}\n                    class={styles.nodeInput}\n                    onMouseDown={(event: any) => {\n                        event.stopPropagation();\n                    }}\n                    onMouseUp={(event: any) => {\n                        event.stopPropagation();\n                        if (this.props.onMouseUpInput) this.props.onMouseUpInput(index);\n                    }}\n                ></div>\n                })}\n                \n            </div>\n        )}\n\n        ${this.props.inputs > 0 && (\n            <div class=\"nodeInputs\">\n                {[...Array(this.props.inputs).keys()].forEach((element,index) => {\n                    <div\n                        ref={(ref: any) => {\n                            this.inputRefs[index] = ref;\n                        }}\n                        class={styles.nodeInput}\n                        onMouseDown={(event: any) => {\n                            event.stopPropagation();\n                        }}\n                        onMouseUp={(event: any) => {\n                            event.stopPropagation();\n                            if (this.props.onMouseUpInput) this.props.onMouseUpInput(index);\n                        }}\n                    ></div>\n                })}\n                \n            </div>\n        )}\n\n        ${this.props.outputs > 0 && (\n            <div id=\"outputs\" class=\"nodeOutputs\">\n                {[...Array(this.props.outputs).keys()].forEach((element, index) => {\n                    <div\n                    ref={(ref: any) => {\n                        this.outputRefs[index] = ref;\n                    }}\n                    class=\"nodeOutput\"\n                    onMouseDown={(event: any) => {\n                        event.stopPropagation();\n                        if (this.props.onMouseDownOutput) this.props.onMouseDownOutput(index);\n                    }}\n                ></div>\n                })}\n                \n            </div>\n        )}\n        `\n        node.appendChild(action);\n        ClickOutside(node, this.props.onClickOutside)\n\n        this.appendChild(node);\n    }            \n    \n};\n\nexport default NodeComponent;\ncustomElements.define(\"node-component\",NodeComponent)\n","import NodeComponent, { NodeComponentProps } from \"../NodeComponent\";\nimport styles from \"./styles.module.css\";\n\ninterface NodeBoardProps {\n    id: string;\n    data: { label?: string; content: any };\n    inputs: number;\n    outputs: number;\n    actions?: { delete: boolean };\n}\n\ninterface Props {\n    nodesPositions: { x: number; y: number }[];\n    nodes: NodeBoardProps[];\n    onNodeMount: (values: {\n        nodeIndex: number;\n        inputs: { offset: { x: number; y: number } }[];\n        outputs: { offset: { x: number; y: number } }[];\n    }) => void;\n    onNodePress: (x: number, y: number) => void;\n    onNodeMove: (nodeIndex: number, x: number, y: number) => void;\n    onNodeDelete: (nodeId: string) => void;\n    onOutputMouseDown: (nodeIndex: number, outputIndex: number) => void;\n    onInputMouseUp: (nodeIndex: number, inputIndex: number) => void;\n    onMouseUp: () => void;\n    onMouseMove: (x: number, y: number) => void;\n}\n\nclass NodesBoard extends HTMLElement{\n    props: Props\n    grabbing: number | null    \n    setGrabbing(value: number|null){\n        this.grabbing = value;\n        this.render();\n    }    \n    selected: number | null\n    setSelected(value: number|null){\n        this.selected = value;\n        this.render();\n    }\n    scene: HTMLElement\n    constructor(props: Props) {\n        super();\n        this.props = props;\n    }\n\n    connectedCallback() {\n        this.grabbing = null;\n        this.selected = null;\n    }\n\n    render(){\n        \n        const main = document.createElement(\"div\");\n        main.className = \"main\"\n        main.onmousemove = this.handleOnMouseMoveScene\n        main.onmouseup = this.handleOnMouseUpScene\n        \n        this.props.nodes.forEach((node, index) => {\n            var props:NodeComponentProps = {\n                x:this.props.nodesPositions[index].x,\n                y:this.props.nodesPositions[index].y,\n                selected:this.selected === index,\n                label:node.data.label,\n                content:node.data.content,\n                inputs:node.inputs,\n                outputs:node.outputs\n            }\n            const nodeComp = new NodeComponent(props)\n        })\n    }\n           \n\n    handleOnMouseMoveScene(event: any) {\n        const x = event.x - this.scene.getBoundingClientRect().x;\n        const y = event.y - this.scene.getBoundingClientRect().y;\n        if (this.grabbing !== null) {\n            this.props.onNodeMove(this.grabbing || 0, x, y);\n        }\n        this.props.onMouseMove(x, y);\n        this.render();\n    }\n\n    handleOnMouseUpScene(event: any) {\n        this.setGrabbing(null);\n        this.props.onMouseUp();\n        this.render();\n    }\n\n    handleOnMouseDownNode(index: number, x: number, y: number) {\n        this.setGrabbing(index);\n        this.setSelected(index);\n        this.props.onNodePress(\n            x - this.scene.getBoundingClientRect().x - this.props.nodesPositions[index].x,\n            y - this.scene.getBoundingClientRect().y - this.props.nodesPositions[index].y\n        );\n        this.render();\n    }\n\n    \n        \n    \n}\n\ncustomElements.define(\"nodes-board\", NodesBoard)\nexport default NodesBoard;\n","\nimport './App'\nimport './index.css'\ndocument.getElementById('root').innerHTML= `<app-root></app-root>`;","import FlowChart, { EdgeProps, NodeProps } from \"../../components/Board\";\n\nconst initialNodes = [\n    {\n        id: \"node-1\",\n        position: { x: 50, y: 100 },\n        data: {\n            content: \"This is a simple node\",\n        },\n        inputs: 0,\n        outputs: 1,\n    },\n    {\n        id: \"node-2\",\n        position: { x: 350, y: 100 },\n        data: {\n            label: \"Node with label\",\n            content: \"This is a node with a label\",\n        },\n        inputs: 1,\n        outputs: 1,\n    },\n    {\n        id: \"node-3\",\n        position: { x: 350, y: 300 },\n        data: {\n            content: \"This is a node with two inputs and two outputs\",\n        },\n        inputs: 2,\n        outputs: 2,\n    },\n\n    {\n        id: \"node-4\",\n        position: { x: 700, y: 100 },\n        data: {\n            label: \"Only inputs\",\n            content: \"This is a node with only inputs\",\n        },\n        inputs: 2,\n        outputs: 0,\n    },\n];\n\nconst initialEdges = [\n    {\n        id: \"edge_0:0_1:0\",\n        sourceNode: \"node-1\",\n        sourceOutput: 0,\n        targetNode: \"node-2\",\n        targetInput: 0,\n    },\n    {\n        id: \"edge_0:0_2:0\",\n        sourceNode: \"node-1\",\n        sourceOutput: 0,\n        targetNode: \"node-3\",\n        targetInput: 0,\n    },\n    {\n        id: \"edge_1:0_3:0\",\n        sourceNode: \"node-2\",\n        sourceOutput: 0,\n        targetNode: \"node-4\",\n        targetInput: 0,\n    },\n    {\n        id: \"edge_2:0_3:1\",\n        sourceNode: \"node-3\",\n        sourceOutput: 0,\n        targetNode: \"node-4\",\n        targetInput: 1,\n    },\n];\n\nexport class Flow extends HTMLElement {\n    nodes:NodeProps[];\n    setNodes(nodes:NodeProps[]){\n        this.nodes = nodes;\n    }\n    edges:EdgeProps[];\n    setEdges(edges:EdgeProps[]){\n        this.edges = edges;\n    }\n    constructor(){\n        super();\n        this.setNodes(initialNodes);\n        this.setEdges(initialEdges);\n        this.render();\n    }\n    render(){\n        const flowchart = new FlowChart({\n            nodes: this.nodes,\n            edges: this.edges,\n            onNodesChange: (newNodes: NodeProps[]) => {\n                this.setNodes(newNodes);\n            },\n            onEdgesChange: (newEdges: EdgeProps[]) => {\n                this.setEdges(newEdges);\n            }\n        })\n        this.innerHTML = flowchart.outerHTML;\n    }\n}\n\ncustomElements.define(\"flow-root\", Flow)","export function DivBuilder(id:string, className: string): HTMLElement{\n    const doc = document.createElement(\"div\");\n    doc.className = className;\n    doc.id = id;\n    return doc;\n}\n\nexport function ButtonBuilder(id:string, className: string): HTMLElement{\n    const doc = document.createElement(\"button\");\n    doc.className = className;\n    doc.id = id;\n    return doc;\n}\n\nexport function ClickOutside(element: any, callback: Function) {\n    const handleClick = (event) => {\n        if (!element.contains(event.target)) {\n            callback();\n        }\n    };\n\n    document.addEventListener('click', handleClick);\n\n    return () => {\n        document.removeEventListener('click', handleClick);\n    };\n}\n\nexport declare function produce<T>(fn: (state: T) => void): (state: T) => T;\n"],"names":["AppRoot","render","newDrawer","innerHTML","Layout","document","createElement","HTMLElement","customElements","define","getEdgeId","nodeOutId","outputIndex","nodeInId","inputIndex","getInitialEdges","nodes","initEdgesNodes","initEdgesPositions","initEdgesActives","i","length","j","nodeI","nodeJ","x","outputs","y","inputs","edgeId","id","x0","y0","x1","y1","outNodeId","inNodeId","getInitialNodes","edges","initNodesPositions","map","node","position","initNodesData","edgesIn","edge","targetNode","sourceNode","sourceOutput","targetInput","filter","elem","edgesOut","initNodesOffsets","Array","offset","FlowChart","props","setEdgesNodes","setEdgesPositions","setEdgesActives","setNodesPositions","setNodesData","setNodesOffsets","setClickedDelta","setNewEdge","edgesNodes","edgesPositions","edgesActives","nodesPositions","nodesData","nodesOffsets","clickedDelta","newEdge","nextNodesLength","nodesBoard","onNodeMount","handleOnNodeMount","onNodePress","handleOnNodePress","onNodeMove","handleOnNodeMove","onNodeDelete","handleOnNodeDelete","onOutputMouseDown","handleOnOutputMouseDown","onInputMouseUp","handleOnInputMouseUp","onMouseUp","handleOnMouseUp","onMouseMove","handleOnMouseMove","edgesBoard","onDeleteEdge","handleOnDeleteEdge","cursor","outerHTML","values","next","prev","nodesOffset","produce","nodeIndex","deltaX","deltaY","nodeId","newNodes","newEdges","onEdgesChange","onNodesChange","nodePosition","outputOffset","outputEdges","JSON","parse","stringify","inputEdges","sourceNodeId","targetNodeId","haveEdge","includes","nodesProduced","push","activeEdgesKeys","Object","keys","activeEdges","edgeInfo","nodeSourceId","nodeTargetId","nodeSourceIndex","findIndex","nodeTargetIndex","EdgeComponent","middlePoint","middleX","middleY","setMiddlePoint","path","className","isNew","selected","setAttribute","calculateOffset","Math","abs","onclick","onClickEdge","ClickOutside","onClickOutside","s","class","transform","onClick","onClickDelete","fill","xmlns","width","height","viewBox","color","d","value","EdgesBoard","ids","newIds","setIds","setSelected","forEach","NodeComponent","inputRefs","outputRefs","getBoundingClientRect","classList","add","style","onmousedown","onMouseDown","action","actions","delete","baseProfile","version","label","content","element","index","appendChild","NodesBoard","grabbing","main","onmousemove","handleOnMouseMoveScene","onmouseup","handleOnMouseUpScene","data","event","scene","setGrabbing","getElementById","initialNodes","initialEdges","Flow","setNodes","setEdges","flowchart","DivBuilder","doc","ButtonBuilder","callback","handleClick","contains","target","addEventListener","removeEventListener"],"mappings":"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"}